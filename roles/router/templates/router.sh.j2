#!/bin/bash
### BEGIN INIT INFO
# Provides:          router
# Required-Start:    networking
# Required-Stop:
# Default-Start:     1 2 3
# Default-Stop:
# Short-Description: Sets up router and NAT functions.
# Description:
### END INIT INFO

iptables -F
iptables -t nat -F

#Setup default policies to handle unmatched traffic
iptables -P INPUT ACCEPT
iptables -P OUTPUT ACCEPT
iptables -P FORWARD DROP

#Interfaces
export LAN={{lanNicName}}
#export WAN=eth0
export WAN={{wanNicName}}

#We lock our services so they only work from the LAN
iptables -I INPUT 1 -i ${LAN} -j ACCEPT
iptables -I INPUT 1 -i lo -j ACCEPT
iptables -A INPUT -p UDP --dport bootps -i ${LAN} -j ACCEPT
iptables -A INPUT -p UDP --dport domain -j REJECT
iptables -A INPUT -p UDP --dport bootps -i ${LAN} -j ACCEPT
iptables -A INPUT -p UDP --dport domain -j REJECT

#Allow access to our server from the WAN
iptables -A INPUT -p TCP --dport 6881:6889 -i ${WAN} -j ACCEPT
iptables -A INPUT -p TCP --dport 49160:49300 -i ${WAN} -j ACCEPT

iptables -A INPUT -p TCP --source 87.229.24.37 --dport 4949 -i ${WAN} -j ACCEPT
iptables -A INPUT -p TCP --dport ssh -i ${WAN} -j ACCEPT
iptables -A INPUT -p TCP --dport http -i ${WAN} -j ACCEPT
iptables -A INPUT -p TCP --dport https -i ${WAN} -j ACCEPT
iptables -A INPUT -p TCP --dport 8000 -i ${WAN} -j ACCEPT
iptables -A INPUT -m state --state ESTABLISHED,RELATED -i ${WAN} -j ACCEPT

#After all, DROP everything else
iptables -P INPUT DROP

#Port forwarding
{% for lanDevice in lanDevices %}
{% if lanDevice.ip is defined %}
{% if lanDevice.exposeTCP is defined %}
{% for port in lanDevice.exposeTCP %}
iptables -t nat -A PREROUTING -i ${WAN} -p tcp --dport {{port.from}} -j DNAT --to {{lanDevice.ip}}:{{port.to}}
{% endfor %}
{% endif %}
{% endif %}
{%endfor %}

#Add the rules for NAT
iptables -I FORWARD -i ${LAN} -d 192.168.1.0/255.255.255.0 -j DROP
iptables -A FORWARD -i ${LAN} -s 192.168.1.0/255.255.255.0 -j ACCEPT
iptables -A FORWARD -i ${WAN} -d 192.168.1.0/255.255.255.0 -j ACCEPT
iptables -t nat -A POSTROUTING -o ${WAN} -j MASQUERADE

#Tell the kernel that ip forwarding is OK
echo 1 > /proc/sys/net/ipv4/ip_forward
for f in /proc/sys/net/ipv4/conf/*/rp_filter ; do echo 1 > $f ; done
